#include <Process.h> 
#include <Bridge.h>
 
int led = 13;
int sensorPin = A0;
int tapisserieOpen = 0;
unsigned int sensorValue = 0;

void setup() 
{
        Bridge.begin();
        pinMode(led, OUTPUT); 
        Serial.begin(9600);
}

void OpenTapisserie() {
 
  Process p;        // Create a process and call it "p"
   p.runShellCommand("curl -d 'status=1&debug=1'  http://api.la-tapisserie.net/s");
  p.run();      // Run the process and wait for its termination

  while (p.available()>0) {
    char c = p.read();
    Serial.print(c);
  }
  // Ensure the last bit of data is sent.
  Serial.flush();
}

void closeTapisserie() {
  Process p;        // Create a process and call it "p"
   p.runShellCommand("curl -d 'status=0&debug=1'  http://api.la-tapisserie.net/s");
  p.run();      // Run the process and wait for its termination
 while (p.available()>0) {
    char c = p.read();
    Serial.print(c);
  }
  // Ensure the last bit of data is sent.
  Serial.flush();
}

void loop() 
{
        sensorValue = analogRead(sensorPin); 
        if(sensorValue<500) {
               if (tapisserieOpen) closeTapisserie();
                digitalWrite(led, LOW);
                 tapisserieOpen = 0;
        }
        else {
              if (tapisserieOpen == 0)  OpenTapisserie(); 
              digitalWrite(led,HIGH); 
              tapisserieOpen = 1;
                
        }
        //Serial.println(sensorValue, DEC);
        delay(300);
}
